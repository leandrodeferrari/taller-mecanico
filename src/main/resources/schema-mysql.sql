DROP DATABASE IF EXISTS taller_mecanico;

CREATE DATABASE IF NOT EXISTS taller_mecanico;

USE taller_mecanico;

CREATE TABLE IF NOT EXISTS empleados(
	ID BIGINT AUTO_INCREMENT NOT NULL,
    APELLIDO VARCHAR(255),
    CELULAR VARCHAR(15),
    CALLE VARCHAR(255),
    CODIGO_POSTAL VARCHAR(255),
    DEPARTAMENTO VARCHAR(255),
    LOCALIDAD VARCHAR(255),
    NUMERO VARCHAR(255),
    PISO VARCHAR(255),
    NOMBRES VARCHAR(255),
    TIPO_EMPLEADO VARCHAR(255),
    CONSTRAINT PK_empleados_id PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS vehiculos(
	ID BIGINT AUTO_INCREMENT NOT NULL,
    ANIO INTEGER,
    COLOR VARCHAR(255),
    MARCA VARCHAR(255),
    MODELO VARCHAR(255),
    PATENTE VARCHAR(255),
    CONSTRAINT PK_vehiculos_id PRIMARY KEY(ID),
    CONSTRAINT UQ_vehiculos_patente UNIQUE(PATENTE)
);

CREATE TABLE IF NOT EXISTS clientes(
	ID BIGINT AUTO_INCREMENT NOT NULL,
    APELLIDO VARCHAR(80) NOT NULL,
    CELULAR VARCHAR(15),
    CALLE VARCHAR(255),
    CODIGO_POSTAL VARCHAR(255),
    DEPARTAMENTO VARCHAR(255),
    LOCALIDAD VARCHAR(255),
    NUMERO VARCHAR(255),
    PISO VARCHAR(255),
    CORREO_ELECTRONICO VARCHAR(255),
    NOMBRES VARCHAR(100) NOT NULL,
    TELEFONO_LINEA VARCHAR(15),
    CONSTRAINT PK_clientes_id PRIMARY KEY(ID),
    CONSTRAINT UQ_clientes_correo_electronico UNIQUE(CORREO_ELECTRONICO)
);

CREATE TABLE IF NOT EXISTS mecanicos(
	ID BIGINT AUTO_INCREMENT NOT NULL,
    ACTIVO CHAR(1),
    APELLIDO VARCHAR(255),
    CELULAR VARCHAR(15),
    CALLE VARCHAR(255),
    CODIGO_POSTAL VARCHAR(255),
    DEPARTAMENTO VARCHAR(255),
    LOCALIDAD VARCHAR(255),
    NUMERO VARCHAR(255),
    PISO VARCHAR(255),
    ESPECIALIDAD VARCHAR(255),
    NOMBRES VARCHAR(255),
    CONSTRAINT PK_mecanicos_id PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS repuestos(
	ID BIGINT AUTO_INCREMENT NOT NULL,
    MARCA VARCHAR(255),
    MODELO VARCHAR(255),
    REPUESTO VARCHAR(255),
    VALOR NUMERIC(19,2),
    CONSTRAINT PK_repuestos_id PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS cliente_vehiculo(
	CLIENTE_ID BIGINT NOT NULL,
    VEHICULO_ID BIGINT NOT NULL,
    CONSTRAINT FK_cliente_vehiculo_cliente_id FOREIGN KEY(CLIENTE_ID) REFERENCES taller_mecanico.clientes(ID),
    CONSTRAINT FK_cliente_vehiculo_vehiculo_id FOREIGN KEY(VEHICULO_ID) REFERENCES taller_mecanico.vehiculos(ID)
);

CREATE TABLE IF NOT EXISTS ordenes_trabajo(
	ID BIGINT AUTO_INCREMENT NOT NULL,
    CANTIDAD_CUOTAS INTEGER,
    DETALLE_FALLA VARCHAR(255),
    ESTADO VARCHAR(255),
    FECHA_FIN_REPARACION TIMESTAMP,
    FECHA_INGRESO TIMESTAMP,
    FECHA_PAGO TIMESTAMP,
    FORMA_PAGO VARCHAR(255),
    IMPORTE_TOTAL NUMERIC(19,2),
    KILOMETRAJE BIGINT,
    NIVEL_COMBUSTIBLE VARCHAR(255),
    TIPO_TARJETA VARCHAR(255),
    ADMINISTRATIVO_ID BIGINT,
    RECEPCIONISTA_ID BIGINT,
    VEHICULO_ID BIGINT,
    CONSTRAINT PK_ordenes_trabajo_id PRIMARY KEY(ID),
    CONSTRAINT FK_ordenes_trabajo_administrativo_id FOREIGN KEY(ADMINISTRATIVO_ID) REFERENCES taller_mecanico.empleados(ID),
    CONSTRAINT FK_ordenes_trabajo_recepcionista_id FOREIGN KEY(RECEPCIONISTA_ID) REFERENCES taller_mecanico.empleados(ID),
    CONSTRAINT FK_ordenes_trabajo_vehiculo_id FOREIGN KEY(VEHICULO_ID) REFERENCES taller_mecanico.vehiculos(ID)
);

CREATE TABLE IF NOT EXISTS detalle_ordenes_trabajo(
	ID BIGINT AUTO_INCREMENT NOT NULL,
    CANTIDAD INTEGER,
    VALOR_TOTAL NUMERIC(19,2),
    ORDEN_TRABAJO_ID BIGINT,
    REPUESTO_ID BIGINT,
    CONSTRAINT PK_detalle_ordenes_trabajo_id PRIMARY KEY(ID),
    CONSTRAINT FK_detalle_ordenes_trabajo_orden_trabajo_id FOREIGN KEY(ORDEN_TRABAJO_ID) REFERENCES taller_mecanico.ordenes_trabajo(ID),
    CONSTRAINT FK_detalle_ordenes_trabajo_repuesto_id FOREIGN KEY(REPUESTO_ID) REFERENCES taller_mecanico.repuestos(ID)
);

CREATE TABLE IF NOT EXISTS mano_obra(
	ID BIGINT AUTO_INCREMENT NOT NULL,
    DETALLE VARCHAR(255),
    DURACION_HS TIME,
    MECANICO_ID BIGINT,
    ORDEN_TRABAJO_ID BIGINT,
    CONSTRAINT PK_mano_obra_id PRIMARY KEY(ID),
    CONSTRAINT FK_mano_obra_mecanico_id FOREIGN KEY(MECANICO_ID) REFERENCES taller_mecanico.mecanicos(ID),
    CONSTRAINT FK_mano_obra_orden_trabajo_id FOREIGN KEY(ORDEN_TRABAJO_ID) REFERENCES taller_mecanico.ordenes_trabajo(ID)
);